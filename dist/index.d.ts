import type * as Type from './types';
declare const observe: any, computed: any, dispose: any;
export * from './types';
export * from './directives';
export * from 'lit-html';
export { observe, computed, dispose };
export declare const $: ({ render: template, state: getState, target, ...options }: Type.Config, ...context: any[]) => Type.Widget;
export declare const $$: ({ target, ...config }: Type.Configs, ...context: any[]) => Type.Widgets;
export declare const noop: () => void;
export declare const tick: (fn?: () => void) => Promise<void>;
export declare function attrToType(val: any): any;
